function doPost(e) {
  var body = JSON.parse(e.postData.contents);
  if (!checkIsMyMessage(body)){
    return;
  }
 
  if (body.message && body.message.chat){
    body.message.chat.id = body.message.chat.id + '';
  }
 
  var payload = tulinBotPayload(body);
  var payloads;
 
  if (Array.isArray(payload)){
    payloads = payload;
  } else {
    payloads = [payload]
  }
 
  for (var i = 0; i < payloads.length; i++){
    payload = payloads[i];
    if (payload){
      var res = PostTelegram(payload);
    }
  }
 
}
function tulinBotPayload(body) {
  var payload;
  var chatId = body.message.chat.id;
  payload = {
    "method": "sendMessage",
    "chat_id": chatId,
    "text": "",
    "disable_web_page_preview": true,
    "reply_to_message_id": body.message.message_id,
  };
 
  var tulinReq = {
    "reqType": 0,
      "perception": {
          "inputText": {
              // name of tulinbot
              "text": body.message.text.replace("@xxxxxxxx", "")
          }
          
      },
      "userInfo": {
        // apikey and userId of tulinbot
          "apiKey": "xxxxxxxxxxxxxxxxxxxxxxx",
          "userId": "xxxxxxxxxxxx"
      }
  };
 
 
  var data = {
    'contentType': 'application/json',
    "method": "post",
    "payload": JSON.stringify(tulinReq)
  };
 
  var response = UrlFetchApp.fetch("http://openapi.tuling123.com/openapi/api/v2", data);
  var res = JSON.parse(response);
 
  if (res.results && res.results[0].values && res.results[0].values.text) {
    payload.text = res.results[0].values.text;
  }
  return payload;
}
function isPrivate(body) {
  var share =  getShareObject(body);
  var chat = share.chat;
  if (chat.type === "private") {
    return true;
  }
  return false;
}
function PostTelegram(payload) {
  var data = {
    'contentType': 'application/json',
    "method": "post",
    "payload": JSON.stringify(payload)
  };
 
  // your API token
  var response = UrlFetchApp.fetch("https://api.telegram.org/bot(xxxxxxxxxxxxxxxxxxxxxx)/", data);
  var res = JSON.parse(response);
  return res;
}
function checkIsMyMessage(body){
  var text = body.message.text;
 
  if (isPrivate(body)){
    return true;
  }
 
  if (body.message.reply_to_message) {
//ur tulinbot id
    if (body.message.reply_to_message.from.id == xxxxxxxx) {
      return true;
    }
  }
 
 
  if (text) {
    var paras = text.split(" ");
    if (paras[0] && paras[0].indexOf("@") >= 0){
      // your tulinbot name
      if  (paras[0].toLowerCase().indexOf("xxxxxxx") >= 0){
        return true;
      }
      return false;
    }
  }
  return false;
}
 
function getShareObject(body) {
  var payload;
  var from;
  var chat;
  var messageId;
  var callback_query_id;
 
  // use editMessage method instead if it's a callback 
  if (body.callback_query) {
    chat = body.callback_query.message.chat;
    chat.id = chat.id + "";
    messageId = body.callback_query.message.message_id;
    from = body.callback_query.from;
    callback_query_id = body.callback_query.id;
    payload = {
      "method": "editMessageText",
      "chat_id": chat.id,
      "message_id": messageId,
      "text": "",
      "parse_mode": "markdown",
      "disable_web_page_preview": false,
    };
  } else {
    from = body.message.from;
    chat = body.message.chat;
    chat.id = chat.id + "";
    messageId = body.message.message_id;
    payload = {
      "method": "sendMessage",
      "chat_id": chat.id,
      "text": "",
      "parse_mode": "markdown",
      "disable_web_page_preview": true,
      "reply_to_message_id": messageId,
    };
 
  }
 
  var share = {};
  share.payload = payload;
  share.from = from;
  share.chat = chat;
  share.messageId = messageId;
  share.callback_query_id = callback_query_id;
 
  return share;
}

